*************************
Agenda:
******************
Master and slave architecture in Jenkins






Create a linux slave and dispatch job from master to slave

Create a new EC2 instance with OS as Amazon linux 2
Provide the security group rule 2 also.

Connect to the instance and install following tools:

Execute command to become root

sudo su -

Java:

sudo amazon-linux-extras install java-openjdk11 -y

GIT:

yum install git -y

            Create a root directory
This directory will be used exclusively my Jenkisn master to place remote files and create job workspace
You need to create a directory and give read/write/execute access to it

Execute:

$ cd /tmp
$ mkdir jenkinsdir

The path of root directory will be /tmp/jenkinsdir

give read/write/execute access to the root directory

$ chmod -R 777 /tmp/jenkinsdir

**********************************************

Setup on Jenkins master:

Go to manage jenkins → Configure system → Scroll down to jenkins location and change the Jenkisn URL to be the latest URL

http://3.147.195.251:8080/

Save the page


2. Manage jenkins → configure global security→ scroll down → Agents → select Random radio button

Save the page


Manage Jenkins – Manage nodes and Clouds

Click on + New node

Give node name: slave1

Select Permanent Agent

Click on create

Now give description : anything text

Number of executors: 1

Remote root directory: /tmp/jenkinsdir


Labels : slave1

Usage : select second option from dropdown

Launch method: launch agents via ssh

Host : private ip address of slave machine
Add credentials.

Scroll down to Node properties
Select tool location:

Click on ADD

Now go to slave server and execute command

$ which git

Path of git will be 

/usr/bin/git


Now add Java


On slave execute :  alternatives --config java

Give number of version 11 java

Copy the path of verison 11


Go to jenkins and paste the path



Go to the pipeline job and add the agent section:


// it is a comment
pipeline{
 tools{
        // mymaven is coming from global tool configuration
        maven 'mymaven'
    }
 // ** which server/agent should this pipeline tasks be executed **
 agent {label 'linux_slave'}
 
 parameters {
 string(name: 'gitrepo', defaultValue: 'https://github.com/Sonal0409/DevOpsCodeDemo.git', description: 'enter the giturl')
 }
 
 stages {
     
     // stage is nothing but a job/task
     
     stage('1.CloneRepo')
     {
         steps{
           
           git "${params.gitrepo}"
         }
     }
     
     stage('2.CompileCode')
     {
         steps{
             // give the maven GOAL to compile: mvn compile
             
             sh 'mvn compile'
         }
     }
     
     stage('3.Codereview')
     {
         steps{
             
                 
             sh 'mvn pmd:pmd'
             
          
            
         }
     }
     
     stage('4.UnitTest')
     {
         steps{
             sh 'mvn test'
         }
        post{
            success{
               junit 'target/surefire-reports/*.xml' 
            }
        }
     }
     
     stage('5.Package')
     {
         steps{
             sh 'mvn package'
         }
     }
 }
    
}




    





Windows Agent:

restart the instance.
Restart the jenkins server
now take public ip and loginto jenkins

Step 1: Go to Manage Jenkins ---> CONFIGURE SYSTEM ---> Check the Jenkins URL is same as URL of browser --> Save
Step 2: Go to Manage Jenkins---> CONFIGURE GLOBAL SECURITY --> Scroll down to AGENTS-->select RANDOM radiobutton--> Save
Step 3: Go to Manage Jenkins---> MAnage Nodes and Clouds  --> New Node

Select New Node--> give name as Winslave--> select radio button permanamet Agent

Name : winslave
Description: give windows 10 machine 
==> # of executors = 1 ==> means number of jobs that we want to run on this slave node. Let it be 1 for now
===> Remote root directory ==> C:\jenkinsdir
Location of a directory folder on your windows machine , so that jenkins can create a workspace folder and store all the files. As we have seen earlier while executiong jobs.
For this --> got to C drive and create an emapty folder.
C:\jenkinsdir

====>  Label : win_slave ==> this is like a tag to slave machine. This is how we will identify the slave machine--> remeber this

===> Usage: 
Select 2nd option: Only build jobs with label expressionmatching the job :
This means for which ever job we will give label as win_slave that job only will run on this job.

===> Launch Method : select option : Launch agent by connecting to master.

Scroll down

Add tools

Add git path as C:\Program Files\Git\cmd\git.exe


SAVE the job.

Now go to win_slave ==> download the agent.jar file and put it in your jenkinsdir folder.

Copy the path and change the public ip in below path
java -jar agent.jar -jnlpUrl http://3.139.60.71:8080/computer/winslave/slave-agent.jnlp -secret 61e8e20badd531b48caeffac8d686f182eb2d77a1c303ee39c5db9d00117c0be -workDir "C:\jenkinsdir"

Go to bash and start jenkins, refresh instance
Go to cmd prompt
change to cd c:\jenkinsdir
copy the above jenkins agent path
System will get connected.

***************************************
RUN a job on Agent

Go to Dashboard

Select the package job---> configure --> GENERAL --> click on Restrict where this project can be run and enter win_slave  

SAVE THE JOB

CLICK on BUILD NOW -- to start the build

CLick on build number--> got to console --to check it is executing on AGent

Go to C folder-->jekinsdir---> C:\jenkinsdir\workspace\package\target==> 
you will see addressbook.war file.


